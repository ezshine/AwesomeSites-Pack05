"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[101],{1101:function(e,n,t){t.r(n),t.d(n,{ScenesRenderer:function(){return F}});var r=t(5893),o=t(7294),i=t(7433),a=t(793),s=t(9477),u=t(6396),l=t(9995),c=t(2686);c.mM.Provider;let v=e=>{let{cameraConfig:n,cameraStore:t,children:i,isActive:u,sceneKey:v,RendererContainer:m}=e,p=(0,o.useMemo)(()=>new s.Scene,[]),d=(0,o.useMemo)(()=>new s.PerspectiveCamera(25),[]),g=(0,a.A)(e=>e.size),h=g.width,x=g.height,M=(0,o.useRef)(g);M.current=g;let j=(0,o.useRef)(null),b=(0,o.useCallback)((e,n)=>{if(!u||!M.current||!j.current)return;let{width:t,height:r,left:o,top:i}=M.current,a=e.clientX-o,s=e.clientY-i;n.pointer.set(a/t*2-1,-(s/r*2)+1),n.raycaster.setFromCamera(n.pointer,j.current)},[M,j,u]);(0,o.useEffect)(()=>{n.fov&&(d.fov=n.fov),n.near&&(d.near=n.near),n.far&&(d.far=n.far),n.position&&d.position.fromArray(n.position),n.target&&d.lookAt(n.target[0],n.target[1],n.target[2]),d.aspect=h/x,d.updateProjectionMatrix()},[d,n,h,x]);let w=(0,o.useMemo)(()=>m||f,[m]);return(0,r.jsx)(c.mM.Provider,{value:{isInsideRenderTexture:!0,isPlaying:!0},children:(0,a.g)((0,r.jsxs)(w,{isPlaying:!0,isPlayingPortal:!0,portalCamera:d,sceneKey:v,scene:p,width:h,height:x,children:[(0,r.jsx)("primitive",{object:d}),(0,r.jsx)(l.h,{cameraApi:t,fov:n.fov,far:n.far,near:n.near,ref:j}),i,(0,r.jsx)("group",{onPointerOver:()=>null})]}),p,{events:{compute:b,priority:0}})})},f=e=>{let{children:n,sceneKey:t,width:r,height:i}=e,l=(0,o.useMemo)(()=>{let e=new s.WebGLRenderTarget(r,i,{samples:8});return u.Fj.setState(n=>({scenes:{...n.scenes,[t]:{...n.scenes[t],mainRenderTexture:e.texture,portalRenderTexture:e.texture}}})),e},[]);return(0,o.useEffect)(()=>{l.setSize(r,i)},[l,r,i]),(0,a.C)(e=>{e.gl.setRenderTarget(l),e.gl.render(e.scene,e.camera),e.gl.setRenderTarget(null)}),n};var m=t(3442),p=t(5769),d=t(6688),g=t(6103),h=t(6772);t(4918);let x=(e,n)=>{(0,o.useEffect)(()=>{let n=()=>{e(window.innerWidth,window.innerHeight)};return window.addEventListener("resize",n,{passive:!0}),n(),()=>{window.removeEventListener("resize",n)}},[...n])},M=()=>{let e=(0,a.A)(e=>e.gl),n=(0,o.useCallback)(()=>{let n=new s.Vector2;return e.getSize(n),{uResolution:n,uVignetteRadius:.81,uVignetteSoftness:.28,uTime:0,activeShop:0,introMap:null,shopMap:null,hudMap:null,noiseMap:null,randomValue:0}},[e]),[t,r]=(0,h.U)(n),i=(0,o.useCallback)(e=>{r(e)},[r]);x(()=>{let n=new s.Vector2;e.getSize(n),i({uResolution:n})},[e,i]);let u=(0,o.useCallback)(()=>{i(n())},[n,i]);return{postProcessingUniforms:t,updatePostProcessingUniforms:i,resetPostProcessingUniforms:u,getDefaultPostProcessingUniforms:n}},j=function(e,n,t,r){let o=class extends s.ShaderMaterial{constructor(o={}){let i=Object.entries(e);super({uniforms:i.reduce((e,[n,t])=>{let r=s.UniformsUtils.clone({[n]:{value:t}});return{...e,...r}},{}),vertexShader:n,fragmentShader:t}),this.key="",i.forEach(([e])=>Object.defineProperty(this,e,{get:()=>this.uniforms[e].value,set:n=>this.uniforms[e].value=n})),Object.assign(this,o),r&&r(this)}};return o.key=s.MathUtils.generateUUID(),o}({tDiffuse:null},"\n  varying vec2 vUv;\n\n  void main() {\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n  }\n","\n  uniform sampler2D tDiffuse;\n  varying vec2 vUv;\n\n  void main() {\n    vec2 uv = vUv;\n    vec3 color = texture2D(tDiffuse, uv).rgb;\n    gl_FragColor = vec4(color, 1.0);\n    #include <tonemapping_fragment>\n    #include <".concat(parseInt(s.REVISION.replace(/\D+/g,""))>=154?"colorspace_fragment":"encodings_fragment",">\n  }\n"));var b=t(295);let w="\n  uniform sampler2D tDiffuse;\n  varying vec2 vUv;\n  uniform vec2 uResolution;\n  uniform float uTime;\n  uniform float randomValue;\n  uniform float activeShop;\n  uniform sampler2D introMap;\n  uniform sampler2D shopMap;\n  uniform sampler2D hudMap;\n  uniform sampler2D noiseMap;\n\n  #define PI 3.1415926535897932384626433832795\n\n \n  ".concat("\n\n  uniform float uVignetteRadius;\n  uniform float uVignetteSoftness;\n\n  float getVignetteFactor(vec2 uv) {\n    vec2 center = vec2(0.5, 0.5);\n    float radius = uVignetteRadius;\n    float softness = uVignetteSoftness;\n\n    float vignetteFactor = 1.0 - smoothstep(radius, radius - softness, length(uv - center));\n    return vignetteFactor;\n  }\n","\n  ").concat(b.jO,"\n  ").concat(b.ol,"\n\n\n  float getNoiseFactor() {\n    vec2 noiseUv = vUv * uResolution.xy;\n    noiseUv = rotateUv(randomValue * 360.0, vec2(0.5), noiseUv);\n    vec2 noiseUv2 = rotateUv(randomValue * 360.0 * 1.5, vec2(0.5), noiseUv);\n\n    float n = texture2D(noiseMap, noiseUv * 0.03).r;\n    float n2 = texture2D(noiseMap, noiseUv2 * 0.02).r;\n    n *= n2;\n    float minNoise = 0.2;\n    float maxNoise = 1.7;\n    n = valueRemap(n, 0.0, 1.0, minNoise, maxNoise);\n    n = clamp(n, minNoise, maxNoise);\n\n    return n;\n\n  }\n\n  void main () {\n    \n    float vignetteFactor = getVignetteFactor(vUv);\n    vignetteFactor = 1.0 - vignetteFactor;\n\n    vec3 intro = texture2D(introMap, vUv).rgb;\n    vec3 shop = texture2D(shopMap, vUv).rgb;\n    vec3 color = mix(intro, shop, activeShop);\n    vec4 hud = texture2D(hudMap, vUv);\n    color = mix(color, hud.rgb, hud.a);\n    color *= vignetteFactor;\n\n    float noiseFactor = getNoiseFactor();\n\n    color *= noiseFactor;\n\n    color.rgb = clamp(color.rgb, 0.0, 1.0);\n\n    gl_FragColor = vec4(color.rgb, 1.0);\n  }\n"),R=(0,o.createContext)(null),U=(e,n)=>{Object.keys(n).forEach(t=>{let r=e[t];"object"==typeof r&&(n[t].value=r.value)})},S=e=>{let{introMap:n,shopMap:t,hudMap:i,children:l}=e,c=(0,p.m)("/textures/noise-1.jpg",e=>{e.wrapS=e.wrapT=s.RepeatWrapping}),{postProcessingUniforms:v,updatePostProcessingUniforms:f,resetPostProcessingUniforms:m,getDefaultPostProcessingUniforms:h}=M(),x=(0,o.useMemo)(()=>new g.T({uniforms:v,vertexShader:"\n  varying vec2 vUv;\n\n  void main() {\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n  }\n",fragmentShader:w}),[v]),b=(0,o.useMemo)(()=>new j({}),[]),S=(0,u.Fj)(e=>e.activeScene);(0,o.useEffect)(()=>{f({activeShop:"intro"===S?0:1})},[S,f]),(0,o.useEffect)(()=>{x.uniforms.introMap.value=n,x.uniforms.shopMap.value=t,x.uniforms.hudMap.value=i,x.uniforms.noiseMap.value=c,f({introMap:n,shopMap:t,hudMap:i,noiseMap:c})},[f,n,t,i,x,c]);let y=(0,o.useRef)(null),F=(0,o.useMemo)(()=>({postProcessingRef:y,resetPostProcessingUniforms:m,updatePostProcessingUniforms:f,getDefaultPostProcessingUniforms:h}),[y,m,f,h]),D=(0,o.useRef)(null);return(0,a.C)(e=>{let{clock:n}=e;if(!D.current)return;D.current.render(),f({randomValue:Math.random(),uTime:n.getElapsedTime()});let{noiseMap:t,hudMap:r,introMap:o,shopMap:i,...a}=v;U(a,x.uniforms)},1),(0,r.jsxs)(R.Provider,{value:F,children:[l,(0,r.jsxs)(d.z,{disableRender:!0,disableGamma:!0,ref:D,children:[(0,r.jsx)("primitive",{object:x}),(0,r.jsx)("shaderPass",{args:[b]})]})]})},y=()=>(0,r.jsx)(o.Suspense,{children:(0,r.jsx)(m._K.Out,{})}),F=()=>{let e=(0,u.Fj)(e=>e.scenes),n=(0,u.Fj)(e=>e.activeScene),t=(0,u.Fj)(e=>e.scenes.intro.mainRenderTexture),l=(0,u.Fj)(e=>e.scenes.shop.mainRenderTexture),f=(0,a.A)(e=>e.events.connected),m=(0,o.useMemo)(()=>new s.WebGLRenderTarget(10,10),[]),p=(0,o.useMemo)(()=>new s.Scene,[]),d=(0,a.A)(e=>e.size);return f?(0,r.jsxs)(S,{introMap:t,shopMap:l,hudMap:m.texture,children:[Object.entries(e).map(e=>{let[t,i]=e;return(0,o.createElement)(v,{...i,key:t,isActive:i.sceneKey===n},(0,r.jsx)(i.SceneComponent,{cameraConfig:i.cameraConfig,sceneKey:i.sceneKey}))}),(0,r.jsxs)(c.TI,{width:d.width,height:d.height,fbo:m,isPlaying:!0,containerScene:p,useGlobalPointer:!0,children:[(0,r.jsx)(y,{}),(0,r.jsx)(i.c,{makeDefault:!0,position:[0,0,3]})]})]}):null}}}]);